/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_FILEPROTO_PB_H_INCLUDED
#define PB_FILEPROTO_PB_H_INCLUDED
#include <pb.h>
#include "sys/types.h"
#include "dirent.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _FileInfo {
    uint64_t inode;
    char name[128];
} FileInfo;

typedef struct _ListFilesRequest {
    bool has_path;
    char path[128];
} ListFilesRequest;

typedef struct _ListFilesResponse {
    bool has_path_error;
    bool path_error;
    DIR* file;
} ListFilesResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ListFilesRequest_init_default            {false, "/"}
#define FileInfo_init_default                    {0, ""}
#define ListFilesResponse_init_default           {false, false, {{NULL}, NULL}}
#define ListFilesRequest_init_zero               {false, ""}
#define FileInfo_init_zero                       {0, ""}
#define ListFilesResponse_init_zero              {false, 0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define FileInfo_inode_tag                       1
#define FileInfo_name_tag                        2
#define ListFilesRequest_path_tag                1
#define ListFilesResponse_path_error_tag         1
#define ListFilesResponse_file_tag               2

/* Struct field encoding specification for nanopb */
#define ListFilesRequest_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, STRING,   path,              1)
#define ListFilesRequest_CALLBACK NULL
#define ListFilesRequest_DEFAULT (const pb_byte_t*)"\x0a\x01\x2f\x00"

#define FileInfo_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT64,   inode,             1) \
X(a, STATIC,   REQUIRED, STRING,   name,              2)
#define FileInfo_CALLBACK NULL
#define FileInfo_DEFAULT NULL

#define ListFilesResponse_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, BOOL,     path_error,        1) \
X(a, CALLBACK, REPEATED, MESSAGE,  file,              2)
extern bool ListFilesResponse_callback(pb_istream_t *istream, pb_ostream_t *ostream, const pb_field_t *field);
#define ListFilesResponse_CALLBACK ListFilesResponse_callback
#define ListFilesResponse_DEFAULT (const pb_byte_t*)"\x08\x00\x00"
#define ListFilesResponse_file_MSGTYPE FileInfo

extern const pb_msgdesc_t ListFilesRequest_msg;
extern const pb_msgdesc_t FileInfo_msg;
extern const pb_msgdesc_t ListFilesResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ListFilesRequest_fields &ListFilesRequest_msg
#define FileInfo_fields &FileInfo_msg
#define ListFilesResponse_fields &ListFilesResponse_msg

/* Maximum encoded size of messages (where known) */
/* ListFilesResponse_size depends on runtime parameters */
#define FileInfo_size                            141
#define ListFilesRequest_size                    130

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
